;	strength - how many times to try before giving up. It doesn't always find the first time
findImage(x, y, image, strength) {
	WinGetPos,,, width, height, A
	if(x = -1 or y = -1)
		MouseGetPos x, y
	Loop %strength% {
		MouseMove x, y, 3

		IfNotExist %image%
		{
			ToolTip
			return findImage(x, y, image, strength)
		}

		ImageSearch, FoundX, FoundY, 0, 0, width, height, *1 %image%
		if(ErrorLevel = 0) {
			return [FoundX, FoundY]
		}
		else if(ErrorLevel = 2) {
			MsgBox, Error with image search. Looked for %image%\
		}
	}
	return -1
}

;	Will deterministically search for each image in imageArray at each point in pointArray
;	Will return an array: [point, image]
;	bufferTime allows image searching for longer than the timeoutValue
deterministicallyFind(pointArray, imageArray) {
start := A_TickCount
BeginDeterministicSearch:
	delta := A_TickCount - start

	for pointIndex, point in pointArray {
		for imageIndex, image in imageArray {
			ToolTip Seeking %image%, 0, 0
			ableToFind := findImage(point[1], point[2], image, 10)
			if(ableToFind != -1)
			{
				ToolTip
				return ableToFind
			}
		}
	}
	goto BeginDeterministicSearch
}

;	Will deterministically ensure image does not appear at point (not array driven)
deterministicallyLose(x, y, image) {
BeginDeterministicLose:
	if(findImage(x, y, image, 10) = true)
		goto BeginDeterministicLose
}