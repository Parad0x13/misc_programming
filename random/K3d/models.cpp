#include "main.h"

float rotate = 0.0f;
float rotate2 = 0.0f;

float cube[][4] = {
-4,-4,4,1,
-4,-4,-4,1,
4,-4,-4,1,
4,-4,4,1,
-4,-4,4,1,
-4,4,4,1,
4,4,4,1,
4,-4,4,0,
4,4,4,1,
4,4,-4,1,
4,-4,-4,0,
4,4,-4,1,
-4,4,-4,1,
-4,-4,-4,0,
-4,4,-4,1,
-4,4,4,0,
0,0,0,9};

float hi[][4]={
-5,5,0,1,
-5,-5,0,0,
-5,0,0,1,
0,0,0,0,
0,5,0,1,
0,-5,0,0,
5,4,0,1,
5,3,0,0,
5,0,0,1,
5,-5,0,0,
0,0,0,9};

float house[][4]={
-.5,0,1,1,
.5,0,1,1,
.5,0,-1,1,
-.5,0,-1,1,
-.5,0,1,1,
-.5,1,1,1,
.5,1,1,1,
.5,0,1,0,
-.5,1,1,1,
-.5,1,-1,1,
.5,1,-1,1,
.5,1,1,0,
-.5,1,1,1,
0,2,1,1,
.5,1,1,0,
-.5,1,-1,1,
0,2,-1,1,
.5,1,-1,0,
0,2,1,1,
0,2,-1,0,
-.5,0,-1,1,
-.5,1,-1,0,
.5,0,-1,1,
.5,1,-1,0,
9,9,9,9};

float triangles[][4]={
-5,-5,0,1,
5,-5,0,1,
0,5,0,1,
-5,-5,0,0,
-5,-5,-10,1,
5,-5,-10,1,
0,5,0,1,
-5,-5,-10,0,
9,9,9,9};

float star[][4]={
0,1,0,1,
-.3,.405,0,1,
-.95,.31,0,1,
-.475,-.155,0,1,
-.6,-.81,0,1,
0,-.5,0,1,
.6,-.81,0,1,
.475,-.155,0,1,
.95,.31,0,1,
.3,.405,0,1,
0,1,0,0,
9,9,9,9};

float orcweapon[][4]={
-4,2,-.3,1,
-4,-.3,-.3,1,
-4,-1,0,1,
-2,0,0,1,
-2.2,.3,-.3,1,
-4,-.3,-.3,1,
-4,-.3,.3,1,
-4,-1,0,0,
-2,0,0,1,
-2.2,.3,.3,1,
-4,-.3,.3,0,
-2.2,.3,.3,1,
-2.3,1,.3,1,
-3,.3,.3,1,
-3,1.3,.3,0,
-3,.3,.3,1,
-3,.3,-.3,1,
-3,1.3,-.3,1,
-2,1.3,-.3,1,
-2,1.3,.3,1,
-3,1.3,.3,0,
-2.2,.3,-.3,1,
-2.2,.3,-.3,1,
-2.2,.3,-.3,1,
-2.3,1,-.3,1,
-3,.3,-.3,0,
-3,1.3,-.3,1,
-3,1.3,.3,0,
-2,1.3,.3,1,
-2,2,.3,1,
-2,2,-.3,1,
-2,1.3,-.3,0,
-4,-.3,.3,1,
-4,2,.3,1,
-2,2,.3,0,
-4,2,-.3,1,
-2,2,-.3,0,
-2.3,1,-.3,1,
-2.3,1,.3,0,
-2.2,.3,.3,1,
-2.2,.3,-.3,0,
-4,2,-.3,1,
-4,2,.3,0,
-2,2,.3,1,
2,2,.3,1,
2,2,-.3,1,
-2,2,-.3,0,
-2,1.3,-.3,1,
2,1.3,-.3,1,
2,1.3,.3,1,
-2,1.3,.3,0,
2,1.3,.3,1,
2,2,.3,0,
2,2,-.3,1,
2,1.3,-.3,0,
9,9,9,9};

float serp[][4]={
-25,-25,0,0,
-37,-37,0,0,
6,-43,0,0,
-22,-46,0,0,
-36,-48,0,0,
-43,-49,0,0,
-21,0,0,0,
-35,-25,0,0,
-42,-37,0,0,
-46,-43,0,0,
-48,-46,0,0,
1,-48,0,0,
-24,-49,0,0,
-37,-49,0,0,
-18,0,0,0,
-34,-25,0,0,
-17,12,0,0,
-8,31,0,0,
21,-9,0,0,
10,20,0,0,
30,-15,0,0,
-10,-32,0,0,
20,-41,0,0,
35,-45,0,0,
42,-47,0,0,
46,-48,0,0,
23,1,0,0,
11,25,0,0,
-19,-12,0,0,
-34,-31,0,0,
-17,9,0,0,
-33,-20,0,0,
-41,-35,0,0,
-45,-42,0,0,
2,-46,0,0,
26,-48,0,0,
-12,-49,0,0,
19,-49,0,0,
9,0,0,0,
4,25,0,0,
2,37,0,0,
26,-6,0,0,
38,-28,0,0,
19,11,0,0,
9,30,0,0,
4,40,0,0,
27,-5,0,0,
13,22,0,0,
31,-14,0,0,
-9,-32,0,0,
-4,9,0,0,
-27,-20,0,0,
-38,-35,0,0,
-44,-42,0,0,
-22,4,0,0,
-11,27,0,0,
19,-11,0,0,
-15,-30,0,0,
-32,-40,0,0,
-41,-45,0,0,
-20,2,0,0,
-35,-24,0,0,
-17,13,0,0,
-8,31,0,0,
-29,-9,0,0,
-14,20,0,0,
18,-15,0,0,
9,17,0,0,
29,-16,0,0,
-10,-33,0,0,
20,-41,0,0,
-15,-45,0,0,
17,-47,0,0,
-16,-48,0,0,
17,-49,0,0,
33,-49,0,0,
41,-49,0,0,
45,-49,0,0,
-2,-49,0,0,
24,-49,0,0,
12,0,0,0,
6,25,0,0,
28,-12,0,0,
14,19,0,0,
7,34,0,0,
-21,-8,0,0,
14,-29,0,0,
7,10,0,0,
-21,-20,0,0,
-35,-35,0,0,
7,-42,0,0,
-21,-46,0,0,
-35,-48,0,0,
7,-49,0,0,
28,-49,0,0,
-11,-49,0,0,
19,-49,0,0,
9,0,0,0,
-20,-25,0,0,
-10,12,0,0,
20,-19,0,0,
-15,-34,0,0,
-7,8,0,0,
-28,-21,0,0,
11,-35,0,0,
-19,-42,0,0,
15,-46,0,0,
-17,-48,0,0,
16,-49,0,0,
8,0,0,0,
29,-25,0,0,
-10,-37,0,0,
-5,6,0,0,
-27,-22,0,0,
-13,14,0,0,
-31,-18,0,0,
-40,-34,0,0,
5,-42,0,0,
27,-46,0,0,
-11,-48,0,0,
19,-49,0,0,
-15,-49,0,0,
-32,-49,0,0,
-16,0,0,0,
-33,-25,0,0,
-41,-37,0,0,
-20,6,0,0,
15,-22,0,0,
9,9,9,9};

float car[][4]={
-7,-1,2,1,
-5,-1,2,1,
-4,-.5,2,1,
-3,-.5,2,1,
-2,-1,2,1,
1,-1,2,1,
2,-.5,2,1,
3,-.5,2,1,
4,-1,2,1,
5,-1,2,1,
5,-1,-2,1,
4,-1,-2,1,
3,-.5,-2,1,
2,-.5,-2,1,
1,-1,-2,1,
-2,-1,-2,1,
-3,-.5,-2,1,
-4,-.5,-2,1,
-5,-1,-2,1,
-7,-1,-2,1,
-7,-1,2,0,
-5,-1,1,1,
-5,-1,2,0,
-5,-1,1,1,
-4,-.5,1,1,
-4,-.5,2,0,
-4,-.5,1,1,
-3,-.5,1,1,
-3,-.5,2,0,
-3,-.5,1,1,
-2,-1,1,1,
-2,-1,2,0,
-2,-1,1,0,
1,-1,1,1,
1,-1,2,0,
1,-1,1,1,
2,-.5,1,1,
2,-.5,2,0,
2,-.5,1,1,
3,-.5,1,1,
3,-.5,2,0,
3,-.5,1,1,
4,-1,1,1,
4,-1,2,0,
4,-1,-2,1,
4,-1,-1,1,
3,-.5,-1,1,
3,-.5,-2,0,
3,-.5,-1,1,
2,-.5,-1,1,
2,-.5,-2,0,
2,-.5,-1,1,
1,-1,-1,1,
1,-1,-2,0,
-2,-1,-2,1,
-2,-1,-1,1,
-3,-.5,-1,1,
-3,-.5,-2,0,
-3,-.5,-1,1,
-4,-.5,-1,1,
-4,-.5,-2,0,
-4,-.5,-1,1,
-5,-1,-1,1,
-5,-1,-2,0,
-7,-1,-2,1,
-7,.5,-2,1,
-7,.5,2,1,
-7,-1,2,0,
-7,.5,-2,1,
-4,1,-2,1,
-1,1,-2,1,
-1,1,2,1,
-4,1,2,1,
-7,.5,2,0,
-4,1,2,1,
-4,1,-2,1,
-2,2,-2,1,
-1,2,-2,1,
-1,1,-2,0,
-1,1,2,1,
-1,2,2,1,
-2,2,2,1,
-4,1,2,0,
-1,2,2,1,
5,2,2,1,
5,-1,2,0,
5,-1,-2,1,
5,2,-2,1,
5,2,2,0,
5,2,-2,1,
-1,2,-2,1,
-1,2,2,0,
-2,2,-2,1,
-2,2,2,0,
-5,-1,-1,1,
-5,-1,1,0,
-2,-1,-1,1,
-2,-1,1,0,
1,-1,-1,1,
1,-1,1,0,
4,-1,-1,1,
4,-1,1,0,
-5,-1,-1,1,
-2,-1,-1,0,
-5,-1,1,1,
-2,-1,1,0,
1,-1,1,1,
4,-1,1,0,
1,-1,-1,1,
4,-1,-1,0,
-1,1,2,1,
-1,-1,2,0,
-4,1,2,1,
-4,-.5,2,0,
-1,1,-2,1,
-1,-1,-2,0,
-4,1,-2,1,
-4,-.5,-2,0,
0,0,0,9};

float glasses[][4]={
-5,0,0,1,
-5,0,-8,1,
-5,-1,-10,0,
5,-1,-10,1,
5,0,-8,1,
5,0,0,1,
4,1,0,1,
2,1,0,1,
1,0,0,1,
0,.3,0,1,
-1,0,0,1,
-2,1,0,1,
-4,1,0,1,
-5,0,0,1,
-4,-1,0,1,
-2,-1,0,1,
-1,0,0,0,
1,0,0,1,
2,-1,0,1,
4,-1,0,1,
5,0,0,0,
0,0,0,9};

float starphilip[][4]={
-5.978,.39,-2.062,1,
-5.987,.39,1.97,1,
-5.885,1.171,1.97,1,
-5.885,1.171,.2,1,
-5.629,2.077,.2,1,
-4.634,3.811,-.917,1,
-5.588,2.185,-2.062,1,
-5.987,.39,-2.062,0,
-5.885,1.171,-1.594,1,
-5.885,1.171,-.268,1,
-5.589,2.184,-.268,1,
-5.083,3.187,-.94,1,
-5.575,2.217,-1.594,1,
-5.885,1.171,-1.594,0,
-4.124,4.358,-2.062,1,
-4.124,4.358,1.97,1,
-3.582,4.813,1.97,1,
-3.582,4.813,.051,1,
-2.681,5.368,-.361,1,
-1.923,5.684,.321,1,
-1.923,5.684,1.97,1,
-1.241,5.87,1.97,1,
-1.241,5.87,.361,1,
-2.508,5.451,-.71,1,
-3.582,4.813,-.31,1,
-3.582,4.813,-2.062,1,
-4.124,4.358,-2.062,0,
.327,5.991,-1.786,1,
-.084,5.999,-1.510,1,
.327,5.991,-1.234,1,
.737,5.955,-1.51,1,
.327,5.991,-1.786,0,
-.031,6,-.664,1,
-.031,6,1.97,1,
.675,5.962,1.97,1,
.675,5.962,-.664,1,
-.031,6,-.664,0,
1.897,5.692,-2.062,1,
1.897,5.692,1.97,1,
2.554,5.429,1.97,1,
2.554,5.429,-2.062,1,
1.897,5.692,-2.062,0,
3.904,4.556,-1.786,1,
3.583,4.813,-1.51,1,
3.904,4.556,-1.234,1,
4.207,4.278,-1.52,1,
3.904,4.556,-1.786,0,
3.625,4.781,-.664,1,
3.625,4.781,1.97,1,
4.162,4.321,1.97,1,
4.162,4.321,-.664,1,
3.625,4.781,-.664,0,
4.928,3.423,-.664,1,
4.928,3.423,3.35,1,
5.297,2.819,3.35,1,
5.297,2.819,1.897,1,
5.637,2.056,2.021,1,
5.999,.106,.675,1,
5.555,2.267,-.664,1,
4.928,3.423,-.664,0,
5.297,2.819,-.0244,1,
5.297,2.819,1.478,1,
5.628,2.079,1.607,1,
5.948,.792,.668,1,
5.62,2.1,-.244,1,
5.297,2.819,-.244,0,
-.032,.009,-4.909,1,
-1.199,.009,-1.538,1,
-4.765,.009,-1.423,1,
-1.919,.009,.728,1,
-2.913,.009,4.155,1,
.013,.009,2.113,1,
2.965,.009,4.117,1,
1.928,.009,.703,1,
4.745,.009,-1.485,1,
1.178,.009,-1.553,1,
-.032,.009,-4.909,0,
0,.509,.091,1,
-.032,.009,-4.909,1,
0,-.491,.091,1,
4.745,.009,-1.4,851,
0,.509,.091,1,
2.965,.009,4.117,1,
0,-.491,.091,1,
2.965,.009,4.117,1,
0,.509,.091,1,
-2.913,.009,4.155,1,
0,-.491,.091,1,
-4.765,.009,-1.423,1,
0,.509,.091,1,
1.178,.009,-1.553,1,
0,-.491,.091,1,
-1.99,.009,-1.538,1,
0,.509,.091,1,
-1.919,.009,.728,1,
0,-.491,.091,1,
.013,.009,2.113,1,
0,.509,.091,1,
1.928,.009,.703,1,
0,-.491,.091,0,
9,9,9,9};

float polygon[][4]={
0,0,34.787,0,
23.191,0,25.929,0,
-11.596,20.084,25.929,0,
-11.596,-20.084,25.929,0,
25.929,20.084,11.596,0,
25.929,-20.084,11.596,0,
-30.358,12.413,11.596,0,
4.4291,32.497,11.596,0,
4.4291,-32.497,11.596,0,
-30.358,-12.413,11.596,0,
30.358,12.413,-11.596,0,
30.358,-12.413,-11.596,0,
-25.929,20.084,-11.596,0,
-4.4291,32.497,-11.596,0,
-4.4291,-32.497,-11.596,0,
-25.929,-20.084,-11.596,0,
11.596,20.084,-25.929,0,
11.596,-20.084,-25.929,0,
-23.191,0,-25.929,0,
0,0,-34.787,0,
9,9,9,9};

void rendercube() {
	int x = 0, end = false;
	while(!end) {
		if(cube[x][3] == 1) {
			glPushMatrix();
			glTranslatef(-2.0f, 0.0f, -6.0f);
			glScalef(0.5f, 0.5f, 0.5f);
			glRotatef(rotate, 1.0f, 1.0f, 1.0f);
			rotate += .05;
			glBegin(GL_LINES);
				glColor3f(1.0f, 0.0f, 0.0f);
				glVertex3f(cube[x][0], cube[x][1], cube[x][2]);
				glVertex3f(cube[x+1][0], cube[x+1][1], cube[x+1][2]);
			glEnd();
			glPopMatrix();
		}
		if(cube[x][3] == 9)
			end = true;
		x++;
	}
}

void renderhi() {
	int x = 0, end = false;
	while(!end) {
		if(hi[x][3] == 1) {
			glPushMatrix();
			glTranslatef(8.0f, 0.0f, 6.0f);
			glScalef(0.5f, 0.5f, 0.5f);
			glRotatef(rotate, 0, 1.0f, 0);
			rotate += .05;
			glBegin(GL_LINES);
				glColor3f(1.0f, 0.0f, 0.0f);
				glVertex3f(hi[x][0], hi[x][1], hi[x][2]);
				glVertex3f(hi[x+1][0], hi[x+1][1], hi[x+1][2]);
			glEnd();
			glPopMatrix();
		}
		if(hi[x][3] == 9)
			end = true;
		x++;
	}
}

void renderhouse() {
	int x = 0, end = false;
	while(!end) {
		if(house[x][3] == 1) {
			glPushMatrix();
			glTranslatef(-20.0f, -3.0f, -20.0f);
			glScalef(4.0f, 4.0f, 4.0f);
			glRotatef(rotate, 0, -1.0f, 0);
			rotate += .05;
			glBegin(GL_LINES);
				glColor3f(0.0f, 0.0f, 1.0f);
				glVertex3f(house[x][0], house[x][1], house[x][2]);
				glVertex3f(house[x+1][0], house[x+1][1], house[x+1][2]);
			glEnd();
			glPopMatrix();
		}
		if(house[x][3] == 9)
			end = true;
		x++;
	}
}

void rendertriangles() {
	int x = 0, end = false;
	while(!end) {
		if(triangles[x][3] == 1) {
			glPushMatrix();
			glTranslatef(-15.0f, 0.0f, 7.0f);
			glScalef(0.5f, 0.5f, 0.5f);
			glRotatef(rotate, 1.0f, 0, 0);
			rotate += .05;
			glBegin(GL_LINES);
				glColor3f(0.0f, 0.0f, 1.0f);
				glVertex3f(triangles[x][0], triangles[x][1], triangles[x][2]);
				glVertex3f(triangles[x+1][0], triangles[x+1][1], triangles[x+1][2]);
			glEnd();
			glPopMatrix();
		}
		if(triangles[x][3] == 9)
			end = true;
		x++;
	}
}

void renderstar() {
	int x = 0, end = false;
	while(!end) {
		if(star[x][3] == 1) {
			glPushMatrix();
			glTranslatef(15.0f, 0.0f, -7.0f);
			glScalef(2.0f, 2.0f, 2.0f);
			glRotatef(rotate, 0.0f, 0.0f, 0.0f);		// I'm not really sure how this does what it does...
			glRotatef(rotate, 0.0f, 1.0f, 0.0f);
			rotate += .05;
			glBegin(GL_LINES);
				glColor3f(0.0f, 0.0f, 1.0f);
				glVertex3f(star[x][0], star[x][1], star[x][2]);
				glVertex3f(star[x+1][0], star[x+1][1], star[x+1][2]);
			glEnd();
			glPopMatrix();
		}
		if(star[x][3] == 9)
			end = true;
		x++;
	}
}

void renderorcweapon() {
	int x = 0, end = false;
	while(!end) {
		if(orcweapon[x][3] == 1) {
			glPushMatrix();
			glTranslatef(10.25f, 0.0f, 20.0f);
			glScalef(2.0f, 2.0f, 2.0f);
			glRotatef(rotate2, 0.0f, 1.0f, 0.0f);
			glRotatef(rotate2, 1.0f, 0.0f, 0.0f);		// Adds a cool effect I think...
			glBegin(GL_LINES);
				glColor3f(1.0f, 0.0f, 0.0f);
				glVertex3f(orcweapon[x][0], orcweapon[x][1], orcweapon[x][2]);
				glVertex3f(orcweapon[x+1][0], orcweapon[x+1][1], orcweapon[x+1][2]);
			glEnd();
			glPopMatrix();
		}
		if(orcweapon[x][3] == 9)
			end = true;
		x++;
	}
}

void renderserp() {
	int x = 0, end = false;
	while(!end) {
		if(serp[x][3] == 0) {
			glPointSize(3.0f);
			glPushMatrix();
			glTranslatef(-20.0f, 5.0f, 7.0f);
			glScalef(4.0f, 4.0f, 4.0f);
			glRotatef(90.0f, 0.0f, 1.0f, 0.0f);
			glBegin(GL_POINTS);
				glColor3f(0.0f, 0.0f, 1.0f);
				glVertex3f(serp[x][0]/50, serp[x][1]/50, serp[x][2]/50);
				glVertex3f(serp[x+1][0]/50, serp[x+1][1]/50, serp[x+1][2]/50);
			glEnd();
			glPopMatrix();

			glPushMatrix();
			glTranslatef(-20.0f, 5.0f, 7.0f);
			glScalef(4.0f, 4.0f, 4.0f);
			glRotatef(180.0f, 0.0f, 1.0f, 0.0f);
			glBegin(GL_POINTS);
				glColor3f(0.0f, 0.0f, 1.0f);
				glVertex3f(serp[x][0]/50, serp[x][1]/50, serp[x][2]/50);
				glVertex3f(serp[x+1][0]/50, serp[x+1][1]/50, serp[x+1][2]/50);
			glEnd();
			glPopMatrix();
			glPointSize(1.0f);
		}
		if(serp[x][3] == 9)
			end = true;
		x++;
	}
}

void rendercar() {
	int x = 0, end = false;
	while(!end) {
		if(car[x][3] == 1) {
			glPushMatrix();
			glTranslatef(-10.0f, 0.5f, 25.0f);
			glScalef(2.0f, 2.0f, 2.0f);
			glRotatef(rotate2, 0, -1.0f, 0);
			rotate2 += .01;
			glBegin(GL_LINES);
				glColor3f(1.0f, 0.0f, 0.0f);
				glVertex3f(car[x][0], car[x][1], car[x][2]);
				glVertex3f(car[x+1][0], car[x+1][1], car[x+1][2]);
			glEnd();
			glPopMatrix();
		}
		if(car[x][3] == 9)
			end = true;
		x++;
	}
}

void renderglasses() {
	int x = 0, end = false;
	while(!end) {
		if(glasses[x][3] == 1) {
			glPushMatrix();
			glTranslatef(8.0f, 0.0f, -15.0f);
			glScalef(0.5f, 0.5f, 0.5f);
			glRotatef(rotate, 0, -1.0f, 0);
			glBegin(GL_LINES);
				glColor3f(1.0f, 0.0f, 0.0f);
				glVertex3f(glasses[x][0], glasses[x][1], glasses[x][2]);
				glVertex3f(glasses[x+1][0], glasses[x+1][1], glasses[x+1][2]);
			glEnd();
			glPopMatrix();
		}
		if(glasses[x][3] == 9)
			end = true;
		x++;
	}
}

void renderstarphilip() {
	int x = 0, end = false;
	while(!end) {
		if(starphilip[x][3] == 1) {
			glPushMatrix();
			glTranslatef(30.0f, 5.0f, 5.0f);
			glScalef(16.0f, 16.0f, 16.0f);
			glRotatef(90.0, 90.0f, 0.0f, 0);
			glRotatef(rotate2, 0, 0, 1.0f);
			glBegin(GL_LINES);
				glColor3f(0.9375f, 0.73828125f, 0.05859375f);
				glVertex3f(starphilip[x][0]/10, starphilip[x][1]/10, starphilip[x][2]/10);
				glVertex3f(starphilip[x+1][0]/10, starphilip[x+1][1]/10, starphilip[x+1][2]/10);
			glEnd();
			glPopMatrix();
		}
		if(starphilip[x][3] == 9)
			end = true;
		x++;
	}
}

void renderpolygon() {		// Gah for somereason its not working!!!
	int x = 0, end = false;
	while(!end) {
		if(polygon[x][3] == 1) {
			glPushMatrix();
//			glTranslatef(30.0f, 5.0f, 5.0f);
//			glScalef(16.0f, 16.0f, 16.0f);
//			glRotatef(90.0, 90.0f, 0.0f, 0);
//			glRotatef(rotate2, 0, 0, 1.0f);
			glBegin(GL_LINES);
				glColor3f(0, 0, 1.0f);
				glVertex3f(polygon[x][0]/10,polygon[x][1]/10, polygon[x][2]/10);
				glVertex3f(polygon[x+1][0]/10, polygon[x+1][1]/10, polygon[x+1][2]/10);
				glVertex3f(-1.0f, 0, 0);
				glVertex3f(1.0f, 0, 0);
			glEnd();
			glPopMatrix();
		}
		if(polygon[x][3] == 9)
			end = true;
		x++;
	}
}

void drawmodels() {
	rendercube();
	renderhi();
	renderhouse();
	rendertriangles();
	renderstar();
	renderorcweapon();
	renderserp();
	rendercar();
	renderglasses();
	renderstarphilip();
	renderpolygon();
}
